// Generated by gencpp from file weather_info/Weather.msg
// DO NOT EDIT!


#ifndef WEATHER_INFO_MESSAGE_WEATHER_H
#define WEATHER_INFO_MESSAGE_WEATHER_H

#include <ros/service_traits.h>


#include <weather_info/WeatherRequest.h>
#include <weather_info/WeatherResponse.h>


namespace weather_info
{

struct Weather
{

typedef WeatherRequest Request;
typedef WeatherResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Weather
} // namespace weather_info


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::weather_info::Weather > {
  static const char* value()
  {
    return "07a56992612a9868fceaf6083a0c9b4c";
  }

  static const char* value(const ::weather_info::Weather&) { return value(); }
};

template<>
struct DataType< ::weather_info::Weather > {
  static const char* value()
  {
    return "weather_info/Weather";
  }

  static const char* value(const ::weather_info::Weather&) { return value(); }
};


// service_traits::MD5Sum< ::weather_info::WeatherRequest> should match
// service_traits::MD5Sum< ::weather_info::Weather >
template<>
struct MD5Sum< ::weather_info::WeatherRequest>
{
  static const char* value()
  {
    return MD5Sum< ::weather_info::Weather >::value();
  }
  static const char* value(const ::weather_info::WeatherRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::weather_info::WeatherRequest> should match
// service_traits::DataType< ::weather_info::Weather >
template<>
struct DataType< ::weather_info::WeatherRequest>
{
  static const char* value()
  {
    return DataType< ::weather_info::Weather >::value();
  }
  static const char* value(const ::weather_info::WeatherRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::weather_info::WeatherResponse> should match
// service_traits::MD5Sum< ::weather_info::Weather >
template<>
struct MD5Sum< ::weather_info::WeatherResponse>
{
  static const char* value()
  {
    return MD5Sum< ::weather_info::Weather >::value();
  }
  static const char* value(const ::weather_info::WeatherResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::weather_info::WeatherResponse> should match
// service_traits::DataType< ::weather_info::Weather >
template<>
struct DataType< ::weather_info::WeatherResponse>
{
  static const char* value()
  {
    return DataType< ::weather_info::Weather >::value();
  }
  static const char* value(const ::weather_info::WeatherResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // WEATHER_INFO_MESSAGE_WEATHER_H
